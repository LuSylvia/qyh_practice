plugins {
    //com.android.library或com.android.application必须在其他plugin之前
    id 'com.android.library'
    id 'kotlin-android'
}

android {
    compileSdkVersion rootProject.ext.android["compileSdkVersion"]
    buildToolsVersion rootProject.ext.android["build_tools_version"]


    defaultConfig {
        multiDexEnabled true
        //applicationId "com.example.module_common"
        minSdkVersion rootProject.ext.android["minSdkVersion"]
        targetSdkVersion rootProject.ext.android["targetSdkVersion"]
        versionCode rootProject.ext.android["versionCode"]
        versionName rootProject.ext.android["versionName"]

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')

    api rootProject.ext.dependencies["kotlin"]
    api rootProject.ext.dependencies["kotlinCoroutines"]
    api rootProject.ext.dependencies["kotlinCoroutines_core"]

    api rootProject.ext.ktx["core"]
    api rootProject.ext.ktx["livedata"]
    api rootProject.ext.ktx["viewmodel"]
    api rootProject.ext.ktx["lifecycle"]

    //api rootProject.ext.ktx["appcompat"]
    //api rootProject.ext.dependencies.refreshLayout
    implementation 'androidx.appcompat:appcompat:1.2.0'                 //必须 1.0.0 以上

    implementation  'com.scwang.smart:refresh-layout-kernel:2.0.1'      //核心必须依赖
    implementation  'com.scwang.smart:refresh-header-classics:2.0.1'    //经典刷新头
    implementation  'com.scwang.smart:refresh-header-radar:2.0.1'       //雷达刷新头
    implementation  'com.scwang.smart:refresh-header-falsify:2.0.1'     //虚拟刷新头
    implementation  'com.scwang.smart:refresh-header-material:2.0.1'    //谷歌刷新头
    implementation  'com.scwang.smart:refresh-header-two-level:2.0.1'   //二级刷新头
    implementation  'com.scwang.smart:refresh-footer-ball:2.0.1'        //球脉冲加载
    implementation  'com.scwang.smart:refresh-footer-classics:2.0.1'    //经典加载
    //implementation 'androidx.appcompat:appcompat:1.2.0'


    api rootProject.ext.dependencies["material"]
    api rootProject.ext.dependencies["constraintlayout"]

    api rootProject.ext.dependencies["gson"]

    api rootProject.ext.dependencies["okHttp3"]
    api rootProject.ext.dependencies["okHttp3LoggingInterceptor"]


    api rootProject.ext.dependencies["retrofit"]
    api rootProject.ext.dependencies["retrofitConvertGson"]
    api rootProject.ext.dependencies["retrofitAdapterRxJava"]

    api rootProject.ext.dependencies["rxlifecycle"]
    api rootProject.ext.dependencies["rxlifecycleComponents"]
    api rootProject.ext.dependencies["rxBinding"]


    api rootProject.ext.dependencies.zhenaiLibSecurity
    //api rootProject.ext.dependencies["refreshLayout"]
    //api rootProject.ext.dependencies["refreshLayout_header"]
//    api rootProject.ext.dependencies["refreshLayout_footer"]



    api rootProject.ext.dependencies["arouter_api"]
    api rootProject.ext.dependencies["arouter_compiler"]

//    api 'com.alibaba:arouter-api:1.5.2'
//    api 'com.alibaba:arouter-compiler:1.5.2'

    implementation 'com.android.support:multidex:1.0.3'

    implementation("androidx.room:room-runtime:$room_version")
    annotationProcessor "androidx.room:room-compiler:$room_version"





    testImplementation 'junit:junit:4.13.2'


    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'

    //implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
}
repositories {
    google()
    mavenCentral()
}